{"version":3,"sources":["context/app/accessibility.provider.tsx","components/Footer/Footer.styles.ts","components/Footer/Footer.component.tsx","components/Navbar/Navbar.styles.ts","components/Navbar/Navbar.tsx","components/DesktopHeader/DesktopHeader.styles.tsx","components/DesktopHeader/DesktopHeader.component.tsx","components/MobileHeader/MobileHeader.styles.ts","components/MobileHeader/MobileHeader.component.tsx","components/MobileFooter/MobileFooter.styles.ts","components/MobileFooter/MobileFooter.component.tsx","components/Spinner/Spinner.styles.ts","components/Spinner/Spinner.component.tsx","components/ScrollToTop/ScrollToTop.styles.ts","components/ScrollToTop/ScrollToTop.component.tsx","App.styles.ts","App.component.tsx","serviceWorker.ts","fontawesome.ts","index.tsx"],"names":["AccessibilityContext","createContext","dyslexicFontActive","toggleDyslexicFontActive","AccessibilityProvider","children","useState","setDyslexicFontActive","Provider","value","FooterContainer","styled","footer","StyledLink","a","StyledIcon","FontAwesomeIcon","Footer","href","target","icon","Navigation","nav","props","hidden","InternalLink","Link","Navbar","toggleHidden","onClick","to","Header","header","LogoContainer","div","Title","img","h1","DesktopHeader","HeaderContainer","FullMobileContainer","Logo","MobileHeader","MobileFooter","Icon","i","Spinner","spin","Button","button","ScrollToTop","showButton","setShowButton","useEffect","window","onload","document","getElementById","onscroll","scrollCheck","scrollTop","title","MainContainer","main","Container","history","createBrowserHistory","Homepage","lazy","NotFound","Chords","ClefToTab","Lessons","Terminology","Newsletter","Community","HowToReadTab","HowToString","HowToTune","Tablature","Accessibility","App","id","fallback","exact","path","component","Boolean","location","hostname","match","library","add","faDiscord","faMailchimp","faBars","faSpinner","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d1564bf2.chunk.js","sourcesContent":["import React, { useState, createContext } from 'react'\r\n\r\nexport const AccessibilityContext = createContext({\r\n  dyslexicFontActive: false,\r\n  toggleDyslexicFontActive: () => {},\r\n})\r\n\r\nconst AccessibilityProvider = ({ children }: { children: React.ReactNode }) => {\r\n  const [dyslexicFontActive, setDyslexicFontActive] = useState(false)\r\n\r\n  const toggleDyslexicFontActive = () =>\r\n    setDyslexicFontActive(!dyslexicFontActive)\r\n\r\n  return (\r\n    <AccessibilityContext.Provider\r\n      value={{\r\n        dyslexicFontActive,\r\n        toggleDyslexicFontActive,\r\n      }}\r\n    >\r\n      {children}\r\n    </AccessibilityContext.Provider>\r\n  )\r\n}\r\n\r\nexport default AccessibilityProvider\r\n","import styled from 'styled-components'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nexport const FooterContainer = styled.footer`\r\n  background: linear-gradient(to top, green, #006400);\r\n  color: white;\r\n  display: flex;\r\n  justify-content: center;\r\n`\r\n\r\nexport const StyledLink = styled.a``\r\n\r\nexport const StyledIcon = styled(FontAwesomeIcon)`\r\n  font-size: 36px;\r\n  color: white;\r\n  margin: 0.625em;\r\n\r\n  &:hover {\r\n    color: rgba(0, 0, 0, 0.5);\r\n  }\r\n`\r\n","import { FooterContainer, StyledLink, StyledIcon } from './Footer.styles'\r\n\r\nconst Footer = () => (\r\n  <FooterContainer>\r\n    <StyledLink href=\"https://discord.gg/Mq9jeA8\" target=\"_blank\">\r\n      <StyledIcon icon={['fab', 'discord']} />\r\n    </StyledLink>\r\n    <StyledLink\r\n      href=\"https://mailchi.mp/bfa9fa63aaab/irish-trad\"\r\n      target=\"_blank\"\r\n    >\r\n      <StyledIcon icon={['fab', 'mailchimp']} />\r\n    </StyledLink>\r\n  </FooterContainer>\r\n)\r\n\r\nexport default Footer\r\n","import styled from 'styled-components'\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport const Navigation = styled.nav`\r\n  display: ${(props) => (props.hidden ? 'flex' : 'none')};\r\n  flex-flow: column nowrap;\r\n  height: 100vh;\r\n  width: ${(props) => (props.hidden ? '100%' : '0')};\r\n  position: fixed;\r\n  top: 50px;\r\n  left: 0;\r\n  overflow-y: auto;\r\n\r\n  @media screen and (min-width: 960px) {\r\n    display: flex;\r\n    position: initial;\r\n    width: 100%;\r\n    margin: 30px 0em;\r\n  }\r\n`\r\n\r\nexport const InternalLink = styled(Link)`\r\n  text-decoration: none;\r\n  color: white;\r\n  padding: 20px;\r\n  text-align: center;\r\n\r\n  &:hover {\r\n    background: rgba(0, 0, 0, 0.15);\r\n  }\r\n\r\n  @media screen and (min-width: 960px) {\r\n    text-align: initial;\r\n    margin: initial;\r\n  }\r\n`\r\n","import { Navigation, InternalLink } from './Navbar.styles'\r\n\r\ntype Props = {\r\n  toggleHidden?: any\r\n  hidden?: boolean\r\n}\r\n\r\nconst Navbar: React.FC<Props> = ({ toggleHidden, hidden }) => (\r\n  <Navigation hidden={hidden}>\r\n    <InternalLink\r\n      onClick={() => (toggleHidden ? toggleHidden(false) : null)}\r\n      to=\"/\"\r\n    >\r\n      Home\r\n    </InternalLink>\r\n    <InternalLink\r\n      onClick={() => (toggleHidden ? toggleHidden(false) : null)}\r\n      to=\"/tablature\"\r\n    >\r\n      Tablature\r\n    </InternalLink>\r\n    <InternalLink\r\n      onClick={() => (toggleHidden ? toggleHidden(false) : null)}\r\n      to=\"/lessons\"\r\n    >\r\n      Lessons\r\n    </InternalLink>\r\n    <InternalLink\r\n      onClick={() => (toggleHidden ? toggleHidden(false) : null)}\r\n      to=\"/chords\"\r\n    >\r\n      Chords\r\n    </InternalLink>\r\n    <InternalLink\r\n      onClick={() => (toggleHidden ? toggleHidden(false) : null)}\r\n      to=\"/clef-to-tab\"\r\n    >\r\n      Clef to Tab\r\n    </InternalLink>\r\n    <InternalLink\r\n      onClick={() => (toggleHidden ? toggleHidden(false) : null)}\r\n      to=\"/terminology\"\r\n    >\r\n      Terminology\r\n    </InternalLink>\r\n    <InternalLink\r\n      onClick={() => (toggleHidden ? toggleHidden(false) : null)}\r\n      to=\"/community\"\r\n    >\r\n      Community\r\n    </InternalLink>\r\n    <InternalLink\r\n      onClick={() => (toggleHidden ? toggleHidden(false) : null)}\r\n      to=\"/newsletter\"\r\n    >\r\n      Newsletter\r\n    </InternalLink>\r\n    <InternalLink\r\n      onClick={() => (toggleHidden ? toggleHidden(false) : null)}\r\n      to=\"/accessibility\"\r\n    >\r\n      Accessibility\r\n    </InternalLink>\r\n  </Navigation>\r\n)\r\n\r\nexport default Navbar\r\n","import styled from 'styled-components'\r\n\r\nexport const Header = styled.header`\r\n  height: 100vh;\r\n  min-width: 300px;\r\n  background-color: green;\r\n  color: white;\r\n  font-family: meathflfregular;\r\n  font-size: 24px;\r\n  flex-flow: column nowrap;\r\n\r\n  display: none;\r\n\r\n  @media screen and (min-width: 960px) {\r\n    display: flex;\r\n  }\r\n`\r\n\r\nexport const LogoContainer = styled.div`\r\n  display: flex;\r\n  flex-flow: column nowrap;\r\n  align-items: center;\r\n  background: linear-gradient(to bottom, green, darkgreen);\r\n  clip-path: ellipse(100% 100% at 50% 0%);\r\n`\r\n\r\nexport const Image = styled.img`\r\n  margin-top: 20px;\r\n  width: 130px;\r\n  height: 130px;\r\n  border-radius: 50%;\r\n  border: 3px solid white;\r\n`\r\n\r\nexport const Title = styled.h1`\r\n  font-size: 34px;\r\n`\r\n","import Footer from 'components/Footer'\r\nimport Navbar from 'components/Navbar'\r\n\r\nimport { Header, LogoContainer, Title } from './DesktopHeader.styles'\r\n\r\nconst DesktopHeader = () => (\r\n  <Header>\r\n    <LogoContainer>\r\n      <Title>Irish-Trad.net</Title>\r\n    </LogoContainer>\r\n    <Navbar />\r\n    <Footer />\r\n  </Header>\r\n)\r\n\r\nexport default DesktopHeader\r\n","import styled from 'styled-components'\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nexport const HeaderContainer = styled.header`\r\n  background: linear-gradient(to bottom, green, darkgreen);\r\n\r\n  @media screen and (min-width: 960px) {\r\n    display: none;\r\n  }\r\n`\r\n\r\nexport const FullMobileContainer = styled.header`\r\n  height: 100vh;\r\n`\r\n\r\nexport const Logo = styled.div`\r\n  display: flex;\r\n  flex-flow: row wrap;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`\r\n\r\nexport const InternalLink = styled(Link)`\r\n  text-decoration: none;\r\n  color: white;\r\n  padding: 12px 24px;\r\n\r\n  &:hover {\r\n    color: black;\r\n    background-color: white;\r\n  }\r\n`\r\n\r\nexport const StyledIcon = styled(FontAwesomeIcon)`\r\n  font-size: 24px;\r\n  color: white;\r\n  padding: 13px 24px;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    color: black;\r\n    background-color: white;\r\n  }\r\n\r\n  @media screen and (min-width: 960px) {\r\n    display: none;\r\n  }\r\n`\r\n","import Navbar from 'components/Navbar'\r\n\r\nimport {\r\n  HeaderContainer,\r\n  Logo,\r\n  InternalLink,\r\n  StyledIcon,\r\n  FullMobileContainer,\r\n} from './MobileHeader.styles'\r\n\r\ntype Props = {\r\n  hidden: boolean\r\n  toggleHidden: any\r\n}\r\n\r\nconst MobileHeader: React.FC<Props> = ({ hidden, toggleHidden }) => {\r\n  return (\r\n    <HeaderContainer>\r\n      {!hidden ? (\r\n        <Logo>\r\n          <InternalLink to=\"/\" onClick={() => toggleHidden(false)}>\r\n            Irish-Trad.net\r\n          </InternalLink>\r\n          <StyledIcon onClick={() => toggleHidden(!hidden)} icon=\"bars\" />\r\n        </Logo>\r\n      ) : (\r\n        <FullMobileContainer>\r\n          <Logo>\r\n            <InternalLink to=\"/\" onClick={() => toggleHidden(false)}>\r\n              Irish-Trad.net\r\n            </InternalLink>\r\n            <StyledIcon onClick={() => toggleHidden(!hidden)} icon=\"bars\" />\r\n          </Logo>\r\n          <Navbar toggleHidden={toggleHidden} hidden={hidden} />\r\n        </FullMobileContainer>\r\n      )}\r\n    </HeaderContainer>\r\n  )\r\n}\r\n\r\nexport default MobileHeader\r\n","import styled from 'styled-components'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nexport const FooterContainer = styled.footer`\r\n  background: linear-gradient(to top, green, #006400);\r\n  color: white;\r\n  display: flex;\r\n  justify-content: center;\r\n\r\n  @media screen and (min-width: 960px) {\r\n    display: none;\r\n  }\r\n`\r\n\r\nexport const StyledLink = styled.a``\r\n\r\nexport const StyledIcon = styled(FontAwesomeIcon)`\r\n  font-size: 36px;\r\n  color: white;\r\n  margin: 0.625em;\r\n`\r\n","import { FooterContainer, StyledLink, StyledIcon } from './MobileFooter.styles'\r\n\r\nconst MobileFooter = () => (\r\n  <FooterContainer>\r\n    <StyledLink href=\"https://discord.gg/Mq9jeA8\" target=\"_blank\">\r\n      <StyledIcon icon={['fab', 'discord']} />\r\n    </StyledLink>\r\n    <StyledLink\r\n      href=\"https://mailchi.mp/bfa9fa63aaab/irish-trad\"\r\n      target=\"_blank\"\r\n    >\r\n      <StyledIcon icon={['fab', 'mailchimp']} />\r\n    </StyledLink>\r\n  </FooterContainer>\r\n)\r\n\r\nexport default MobileFooter\r\n","import styled from 'styled-components'\r\n\r\nexport const Icon = styled.i`\r\n  color: #006400;\r\n  font-size: 100px;\r\n  display: flex;\r\n  justify-content: center;\r\n`\r\n","import { Icon } from './Spinner.styles'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst Spinner = () => (\r\n  <Icon>\r\n    <FontAwesomeIcon icon=\"spinner\" spin />\r\n  </Icon>\r\n)\r\n\r\nexport default Spinner\r\n","import styled from 'styled-components'\r\n\r\nexport const Button = styled.button`\r\n  display: 'block'; /* Hidden by default */\r\n  position: fixed; /* Fixed/sticky position */\r\n  bottom: 20px; /* Place the button at the bottom of the page */\r\n  right: 40px; /* Place the button 30px from the right */\r\n  z-index: 99; /* Make sure it does not overlap */\r\n  border: none; /* Remove borders */\r\n  outline: none; /* Remove outline */\r\n  background: linear-gradient(\r\n    to bottom,\r\n    green,\r\n    darkgreen\r\n  ); /* Set a background color */\r\n  color: white; /* Text color */\r\n  cursor: pointer; /* Add a mouse pointer on hover */\r\n  padding: 15px; /* Some padding */\r\n  border-radius: 0.625em; /* Rounded corners */\r\n  font-size: 1.125em; /* Increase font size */\r\n\r\n  &:hover {\r\n    background: linear-gradient(to bottom, darkgreen, green);\r\n  }\r\n`\r\n","import React, { useState, useEffect } from 'react'\r\n\r\nimport { Button } from './ScrollToTop.styles'\r\n\r\nconst ScrollToTop = () => {\r\n  const [showButton, setShowButton] = useState(false)\r\n\r\n  useEffect(() => {\r\n    window.onload = () =>\r\n      (document.getElementById('top')!.onscroll = () => scrollCheck())\r\n  }, [])\r\n\r\n  const scrollCheck = () => {\r\n    if (document.getElementById('top')) {\r\n      document.getElementById('top')!.scrollTop > 200\r\n        ? setShowButton(true)\r\n        : setShowButton(false)\r\n    }\r\n  }\r\n\r\n  const scrollTop = () => {\r\n    document.getElementById('top')!.scrollTop = 0\r\n  }\r\n\r\n  return showButton ? (\r\n    <Button onClick={scrollTop} title=\"Go to top\">\r\n      Top\r\n    </Button>\r\n  ) : null\r\n}\r\n\r\nexport default ScrollToTop\r\n","import styled from 'styled-components'\r\n\r\nexport const MainContainer = styled.main`\r\n  padding: 0.625em;\r\n  overflow: hidden;\r\n\r\n  @media screen and (min-width: 960px) {\r\n    height: 100vh;\r\n    overflow-y: scroll;\r\n    padding: 0em;\r\n  }\r\n`\r\n\r\nexport const Container = styled.main`\r\n  height: 100vh;\r\n  overflow: ${(props) => (props.hidden ? 'hidden' : 'auto')};\r\n  display: flex;\r\n  flex-flow: column nowrap;\r\n  justify-content: space-between;\r\n\r\n  @media screen and (min-width: 960px) {\r\n    display: flex;\r\n    flex-flow: row nowrap;\r\n  }\r\n`\r\n","import { lazy, Suspense, useState } from 'react'\r\n\r\nimport { Router, Switch, Route } from 'react-router-dom'\r\nimport { createBrowserHistory } from 'history'\r\n\r\nimport DesktopHeader from 'components/DesktopHeader'\r\nimport MobileHeader from 'components/MobileHeader'\r\nimport MobileFooter from 'components/MobileFooter'\r\nimport Spinner from 'components/Spinner'\r\nimport ScrollToTop from 'components/ScrollToTop'\r\n\r\nimport AccessibilityProvider from './context/app/accessibility.provider'\r\n\r\nimport { Container, MainContainer } from './App.styles'\r\n\r\nconst history = createBrowserHistory()\r\n\r\nconst Homepage = lazy(\r\n  () => import('pages/Homepage' /* webpackChunkName: 'Homepage' */)\r\n)\r\n\r\nconst NotFound = lazy(\r\n  () => import('pages/NotFound' /* webpackChunkName: 'NotFound' */)\r\n)\r\n\r\nconst Chords = lazy(\r\n  () => import('pages/Chords' /* webpackChunkName: 'Chords' */)\r\n)\r\n\r\nconst ClefToTab = lazy(\r\n  () => import('pages/ClefToTab' /* webpackChunkName: 'ClefToTab' */)\r\n)\r\n\r\nconst Lessons = lazy(\r\n  () => import('pages/Lessons' /* webpackChunkName: 'Lessons' */)\r\n)\r\n\r\nconst Terminology = lazy(\r\n  () => import('pages/Terminology' /* webpackChunkName: 'Terminology' */)\r\n)\r\n\r\nconst Newsletter = lazy(\r\n  () => import('pages/Newsletter' /* webpackChunkName: 'Newsletter' */)\r\n)\r\n\r\nconst Community = lazy(\r\n  () => import('pages/Community' /* webpackChunkName: 'Community' */)\r\n)\r\n\r\nconst HowToReadTab = lazy(\r\n  () =>\r\n    import(\r\n      'pages/Lessons/pages/HowToReadTab'\r\n      /* webpackChunkName: 'HowToReadTab' */\r\n    )\r\n)\r\n\r\nconst HowToString = lazy(\r\n  () =>\r\n    import(\r\n      'pages/Lessons/pages/HowToString'\r\n      /* webpackChunkName: 'HowToString' */\r\n    )\r\n)\r\n\r\nconst HowToTune = lazy(\r\n  () =>\r\n    import('pages/Lessons/pages/HowToTune' /* webpackChunkName: 'HowToTune' */)\r\n)\r\n\r\nconst Tablature = lazy(\r\n  () => import('pages/Tablature' /* webpackChunkName: 'Tablature' */)\r\n)\r\n\r\nconst Accessibility = lazy(\r\n  () => import('pages/Accessibility' /* webpackChunkName: 'Accessibility' */)\r\n)\r\n\r\nconst App = () => {\r\n  const [hidden, toggleHidden] = useState(false)\r\n\r\n  return (\r\n    <Router history={history}>\r\n      <Container hidden={hidden}>\r\n        <DesktopHeader />\r\n        <div>\r\n          <MobileHeader hidden={hidden} toggleHidden={toggleHidden} />\r\n          <AccessibilityProvider>\r\n            <MainContainer id=\"top\">\r\n              <Suspense fallback={Spinner}>\r\n                <Switch>\r\n                  <Route exact path=\"/\" component={Homepage} />\r\n                  <Route path=\"/chords\" component={Chords} />\r\n                  <Route path=\"/clef-to-tab\" component={ClefToTab} />\r\n                  <Route path=\"/community\" component={Community} />\r\n                  <Route path=\"/newsletter\" component={Newsletter} />\r\n                  <Route path=\"/lessons\" component={Lessons} />\r\n                  <Route\r\n                    path=\"/lessons/how-to-read-tab\"\r\n                    component={HowToReadTab}\r\n                  />\r\n                  <Route\r\n                    path=\"/lessons/how-to-string\"\r\n                    component={HowToString}\r\n                  />\r\n                  <Route path=\"/lessons/how-to-tune\" component={HowToTune} />\r\n                  <Route path=\"/terminology\" component={Terminology} />\r\n                  <Route path=\"/tablature\" component={Tablature} />\r\n                  <Route path=\"/accessibility\" component={Accessibility} />\r\n                  <Route path=\"*\" component={NotFound} />\r\n                </Switch>\r\n              </Suspense>\r\n              <ScrollToTop />\r\n            </MainContainer>\r\n          </AccessibilityProvider>\r\n        </div>\r\n        <MobileFooter />\r\n      </Container>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config)\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          )\r\n        })\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing\r\n        if (installingWorker == null) {\r\n          return\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              )\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration)\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.')\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration)\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error)\r\n    })\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type')\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload()\r\n          })\r\n        })\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      )\r\n    })\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister()\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message)\r\n      })\r\n  }\r\n}\r\n","// import the library\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\n\r\n// import your icons\r\nimport { faDiscord, faMailchimp } from '@fortawesome/free-brands-svg-icons'\r\n\r\nimport { faBars, faSpinner } from '@fortawesome/free-solid-svg-icons'\r\n\r\nlibrary.add(\r\n  faDiscord,\r\n  faMailchimp,\r\n  faBars,\r\n  faSpinner\r\n  // more icons go here\r\n)\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport App from './App.component'\r\n\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nimport './fontawesome'\r\n\r\nimport 'animate.css/animate.min.css'\r\n\r\nimport './index.css'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}